import &ArtSuite, global.Number

pfCache = []

primeFactorizationR = (n, out = []) ->
  switch
  when n <= 1 then out.push n
  when n in primes
    out.push n
  else
    find prime in primes when isInteger n / prime
      out.push prime
      primeFactorizationR n / prime, out
  out

primes: primes = compactFlatten []
  2   3   5   7   11  13
  17  19  23  29  31  37
  41  43  47  53  59  61
  67  71  73  79  83  89
  97  101 103 107 109 113
  127 131 137 139 149 151
  157 163 167 173 179 181
  191 193 197 199

primeFactorization: (n) ->
  pfCache[n] ||= primeFactorizationR n

isFactorOf: (factor, ofThis) ->
  factor != ofThis
  && isInteger ofThis / factor
