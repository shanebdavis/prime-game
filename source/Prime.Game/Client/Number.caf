import &StandardImport, global.Number

tileCenter = point tileSize / 2

class Number extends FluxComponent
  @subscriptions
    :highlights.highlightedNumber
    :highlights.justHighlightNumber

  preprocessProps: (prop) ->
    prop extract number
    merge prop, factors: primeFactorization number

  render: ->
    @ extract highlightedNumber, justHighlightNumber

    @props extract
      number
      factors
      selected
      emoji
      noHighlight
      location
      centered
    numFactors = factors.length
    factorSpacing = 1
    unless isPrime = numFactors == 1 && number != 1
      [firstFactor] = factors
      unless find factor in factors when factor != firstFactor
        allSame = true

    color =
      if isPrime
        getPrimeColor number
      else if allSame
        getPrimeColor firstFactor


    mainPadding = 15
    bold = isPrime || allSame
    player = switch number
    when 50 then :ðŸ¥µ
    when 19 then :ðŸ¥¶
    Element
      size:
        if @props.game2 && number == 1
          tileSize * 1.5
        else
          tileSize
      location: location
      padding:  mainPadding
      axis: if centered then .5
      on:
        mouseIn:  !noHighlight && -> @models.highlights.setHighlightedNumber number
        mouseOut: !noHighlight && -> @models.highlights.clearHighlightedNumber()
        pointerClick: @props.click

      draw:
        :circle
        unless noHighlight
          if selected || justHighlightNumber == number
            padding: factorSize / 4
            outline: :black
          else if highlightedNumber > 1 && number > 1
            if highlightedNumber == number
              padding: factorSize / 4
              outline:
                if @props.game2
                  color: #fff
                  lineWidth: 10
                else
                  #aaa
            else
              numberIsFactorOf = isFactorOf number, highlightedNumber
              highlightedNumberIsFactorOf = isFactorOf highlightedNumber, number
              if numberIsFactorOf || highlightedNumberIsFactorOf ||
                  isOffByOne = @props.game2 &&
                    number == highlightedNumber - 1
                    || number == highlightedNumber + 1

                numberFactors = primeFactorization(number)
                highlightedNumberFactors = primeFactorization(highlightedNumber)


                n1 = number
                n2 = highlightedNumber

                if switch ratio = max(n1,n2) / min(n1,n2)
                    when 2 3 5 7 then true

                  padding: factorSize / 4
                  fill:
                    getPrimeColor ratio
                    .withAlpha .5
                else
                  padding: factorSize / 4
                  fill:
                    if isOffByOne
                      #fff7
                    else
                      #0001
                #   padding: factorSize / 4
                #   outline:
                #     color:
                #       if highlightedNumber in primes
                #         getPrimeColor highlightedNumber
                #       else #ccc

                #     lineWidth: 1

        padding: mainPadding + factorSize / 2
        if @props.game2
          fill:
            color:
              if number == 1 then :black else color ? #eee
            shadow:
              offset: 0
              blur: 20
              color: :black
          outline: if number == 1
            #07f
        else
          color ? #eee

        if number > 1
          array factor, i in factors by 1
            circle: rect
              center:
                tileCenter
                .add point
                  angle:
                    Math.PI * 2
                    * (numFactors - i - 1) / numFactors
                    - Math.PI / 2
                  magnitude:
                    tileSize / 2
                    - factorSize / 2
                    - mainPadding

              size: factorSize
            fill:      getPrimeColor factor

      TextElement
        :textCenterCenter
        fontSize:   if bold then 24 else 18
        fontFamily: :arial
        fontWeight: :bold
        color: if bold then #fffe else #aaa
        text: number

      if !isPrime && (lastFactor = peek factors) > 10
        TextElement
          :childrenSize
          :centerCenter
          layoutMode: :tight
          location:   xw:.5 y: factorSize / 2
          fontFamily: :arial
          fontSize:   10
          fontWeight: :bold
          color:      :white
          text:       lastFactor

      if emoji
        Element
          padding: -mainPadding
          &Pawn {} emoji
