import &StandardImport

center = point 6.5 * tileSize

getBoardLocation = (number) ->
  Math extract log2, floor, pow

  m = floor log2 number
  a =
    number - pow 2, m
    / pow 2, m

  angle =
    Math.PI * 2 * a

  center
  .add point {}
    magnitude:
      m + a
      * tileSize
    angle



class Board2 extends FluxComponent
  @subscriptions
    :currentGame.currentGame

  @stateFields
    hoverNumber: null

  render: ->
    @currentGame extract
      winningNumber
      players
      pawns
      emojis

    pawnLocations = []

    lastNumber = 64

    Element
      :childrenSize
      scale: .75
      draw:
        shape: (context, area) ->
          {x:cx, y:cy} = getBoardLocation 1
          context.moveTo cx, cy
          each n from 2 to lastNumber by 1
            {x, y} = getBoardLocation n
            switch n
            when 3 then context.lineTo center.x, center.y + tileSize * 1.1
            when 4 then context.lineTo center.x, center.y - tileSize * 1.33

            context.lineTo x, y
          # {x, y} = getBoardLocation 2
          # context.lineTo x, y
          # context.arc cx, cy, tileSize, 0, Math.PI

          # context.arc cx+tileSize/2, cy, tileSize*1.5, Math.PI, Math.PI * 2

          # # {x:x4, y:y4} = getBoardLocation 4
          # # # context.moveTo cx,cy-tileSize
          # # context.moveTo x4,y4

          # # each n from 5 to 63
          # #   {x, y} = getBoardLocation n
          # #   context.moveTo x, y


          # context.arc cx, cy, tileSize*2, 0, Math.PI * 3/2
          # {x:x7, y:y7} = getBoardLocation 7
          # {x:x8, y:y8} = getBoardLocation 8
          # context.moveTo
          #   # x7 + tileSize * 1.5
          #   # y7
          #   # x8
          #   # y8 - tileSize * 1.5
          #   x8
          #   y8

          # context.arc cx, cy, tileSize*3, 0, Math.PI * 7/4
          # {x, y} = getBoardLocation 16
          # context.moveTo x, y
          # context.arc cx, cy, tileSize*4, 0, Math.PI * 15/8
          # {x, y} = getBoardLocation 32
          # context.moveTo x, y
          # context.arc cx, cy, tileSize*5, 0, Math.PI * 31/16


        outline: #7

      array number from 1 to lastNumber by 1
        &Number {}
          number
          centered: true
          location = getBoardLocation number

      # array {number}, pawnId in pawns
      #   location = getBoardLocation number
      #   while find loc in pawnLocations when loc.eq location
      #     location.x -= 10
      #   pawnLocations.push location
      #   &Pawn {}
      #     key: pawnId
      #     pawnId
      #     location



